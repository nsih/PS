=개요=
중간 노드를 언제 순회하는지가 기준

*전위순회(preorder traversal)
		: 중간 왼쪽 오른쪽

*중위순회(inorder traversal)
		: 왼쪽 중간 오른쪽

*후위 순회(postorder traversal)
		: 왼쪽 오른쪽 중간

=구현=

트리의 루트노드를 파라메터로 받는다.

*노드 클래스
class Node():
    def __init__(self, root, left, right):
        self.root = root
        self.left = left
        self.right = right

*Preorder

def preorder(node):
    print(node.root, end='')

    if node.left != '.':
        preorder(tree[node.left])

    if node.right != '.':
        preorder(tree[node.right])
    return

*Inorder

def inorder(node):
    if node.left != '.':
        inorder(tree[node.left])

    print(node.root, end='')

    if node.right != '.':
        inorder(tree[node.right])
    return


*Postorder

def postorder(node):
    if node.left != '.':
        postorder(tree[node.left])

    if node.right != '.':
        postorder(tree[node.right])

    print(node.root, end='')

    return