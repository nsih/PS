=개요=
모든 정점에서 모든 다른 정점까지의 최단 경로를 구하는 동적 계획법(DP) 기반의 알고리즘

=특징=
O^3의 시간복잡도


=구현=
1.	각 정점에서 다른 정점으로 가는 거리를 나타내는 2차원 배열 생성 (거리 무한대로 초기화)

2.	3중 for문을 통해 i,j의 최단거리를 중간경유지 k를 거쳐서 구하도록 한다
	i -> k -> j

3.	결과적으로 모든 정점 쌍에 대해 최단 경로가 구해진다.



=활용처=

==1==
https://www.acmicpc.net/problem/11404

n(2 ≤ n ≤ 100)개의 도시가 있고 m(1 ≤ m ≤ 100,000)개의 버스가 있다.
'''모든 도시의 쌍''' (A, B)에 대해서 도시 A에서 B로 가는데 필요한 비용의 최솟값을 구하라.

