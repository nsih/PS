=개요=
특정 정점에서 다른 특정 정점까지의 최단거리를 구하는 알고리즘

=특징=
1.	DP를 활용하여 큐가 소진될 때 까지 계속 최단거리(최적해)로 계속 갱신
2.	우선순위 큐(Heap)를 이용해 가장 비용이 적은 경로를 우선적으로 탐색
3.	음수는 안먹힌다 (벨만포드 써야함)


=구현=

1. 출발노드 거리는 0으로 설정하고, 나머지 모든 노드의 거리는 무한대로 설정한 거리정보 리스트 선언
2. 큐에서 가장 짧은 거리를 가진 노드를 꺼냄
	2.1	이미 처리됐거나 원래가 더 짧으면 무시
	2.2	더 짧아질 수 있으면 갱신하고 큐 삽입
	2.e	삽입된 큐가 없어질때 까지 반복


=활용=
==1==
#A에서 B로 이동 하는데 V1 V2 두 개의 정점을 거쳐야 할때 최소 거리
#하나의 정점만 통과하려면 dp[vertex] 만 구하면 됨
#A - V1 - V2 - B인 경우와
#A - V2 - V1 - B인 경우 중 최소가 답

==2==
https://www.acmicpc.net/status?from_mine=1&problem_id=9370&user_id=sih6571
#시작점, v1, v2이 주어지고 끝점의 후보지가 몇 군대 주어진다.
#시작점에서 부터 v1, v2를 거처, 끝점의 후보지들까지 가는게 최단거리가 될수 있는 후보지들을 오름차순으로 출력

